<?php
/**
 *
 * The content is generated by using TextMate, and edited by yuhari.
 *
 *
 * 友盟推送
 * 支持安卓的指定用户和全部用户推送
 *
 *
 * @author 	   yuhari
 * @maintainer yuhari
 * @version    2.0.0
 * @modified   2020/03/25 13:59:12
 *
 */
namespace UPush ;

class UPush {
	
	protected $context ;
	
	public function __construct($appid, $appkey) {
		$this->context = new Context($appid, $appkey) ;
	}
	
	// 指定用户
	public function setUid($uid) {
		$target = array(
			'type' 	  => 'customizedcast', 
			'id_type' => 'uid' ,
			'id'	  => $uid ,
		) ;
		
		$this->context->setTarget($target) ;
		
		return $this ;
	}
	
	// 活动全部发送
	public function setAllUser() {
		$target = array(
			'type'	=> 'broadcast' ,
		) ;
		
		$this->context->setTarget($target) ;
		
		return $this ;
	}
	
	// 发送数据
	public function setData($data) {
		$msg = array(
			'title' 	=> $data['title'] ,
			'subtitle'  => $data['subtitle'] ,
			'body'		=> $data['desc'] ,
		) ;
		$this->context->getModulePayload()->setMessage($msg) ;
		
		if ($scene = $data['scene']) {
			$link = 'default' ;
			if (!empty($scene['link'])) {
				$link = $scene['link'] ;
			} else {
				$link = sprintf("%s?%s", $scene['path'], http_build_query($scene['args'])) ;
			}
			
			$behavior = array(
				'method' 	=> 'go_custom' ,
				'link'		=> array('link' => $link) ,
			) ;
			$this->context->getModulePayload()->setOpenBehavior($behavior) ;
		}
		
		return $this ;
	}
	
	// 定时发送时间
	public function setStartTime($time) {
		$this->context->getModulePolicy()->setStartTime($time) ;
		
		return $this ;
	}
	
	// 过期时间
	public function setExpireTime($time) {
		$this->context->getModulePolicy()->setExpireTime($time) ;
		
		return $this ;
	}
	
	public function setDescription($desc) {
		$this->context->setDescription($desc) ;
		
		return $this ;
	}
	
	public function setProductionMode() {
		$this->context->setDebugMode(true) ;
		
		return $this ;
	}
	
	// 修正小米推送，友盟
	public function amendMiPushActivity($activity) {
		$this->context->setAttribute('mipush', "true") ;
		$this->context->setAttribute('mi_activity', $activity) ;
		
		return $this ;
	}
	
	// 设置任务id
	public function setTaskId($task_id) {
		$this->context->setAttribute('task_id', $task_id) ;
		
		return $this ;
	}
	
	// 发送
	public function send() {
		return $this->context->send() ;
	}
	
	// 取消任务
	public function cancel() {
		return $this->context->cancel() ;
	}
	
	// 任务状态
	public function status() {
		return $this->context->status() ;
	}
}
